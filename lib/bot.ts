import { Bot, Context } from "https://deno.land/x/grammy@v1.32.0/mod.ts";
import { menuKeyboard, yesOrNo, interesKeyboard } from "./keyboards.ts"; // –∏–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä
import { getProfile, reviewProfile, setState, getSimularUsers } from "./functions.ts"; //–∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
import { createClient } from "npm:@supabase/supabase-js"; // database
import { UserInfo } from "./interfaces.ts";
/*import { createClient } from "jsr:@supabase/supabase-js@2";
const supabase = createClient(
  Deno.env.get("https://goscxscwzyizqwwwiyxe.supabase.co")!,
  Deno.env.get("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdvc2N4c2N3enlpenF3d3dpeXhlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzM2ODkwMDYsImV4cCI6MjA0OTI2NTAwNn0.WmLJMzxmMvdF8T9Gncd1L6oem0d7C6ZtHVTKIqzdviw")!,
);*/
//–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è supabase
const supabaseUrl = "https://goscxscwzyizqwwwiyxe.supabase.co";
const supabaseKey = Deno.env.get("SUPABASE_KEY") || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdvc2N4c2N3enlpenF3d3dpeXhlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzM2ODkwMDYsImV4cCI6MjA0OTI2NTAwNn0.WmLJMzxmMvdF8T9Gncd1L6oem0d7C6ZtHVTKIqzdviw";
const supabase = createClient(supabaseUrl, supabaseKey);
export const users = supabase.from("users");// –≤—ã–ø–µ–ª–∏–ª —Ç–∫ –Ω–∞—à—ë–ª —á—Ç–æ –ø–æ–¥—Ä—É–≥–æ–º—É –æ–±—ä—è–≤–ª—è–µ—Ç—Å—è —ç—Ç–∞ —Å—É–∫–∞
//–æ–±—ä—è–≤–∏–ª –±–æ—Ç–∞
export const bot = new Bot<MyContext>(Deno.env.get("BOT_TOKEN") || "7785377297:AAHQXYH32S0fE5TOZvuN1GPxxAnHOvT0OXg");

export const database = await Deno.openKv();

// info –±—É–¥–µ—Ç –Ω—É–∂–Ω–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥ (–∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è) - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ  
export const info: UserInfo = {
  id: 0,
  name: "",
  age: 0,
  interests: "",
  coffee: "",
  time: 0,
  done: false,
  state: "",
};
// info –±—É–¥–µ—Ç –Ω—É–∂–Ω–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥ (–∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è) - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
bot.command("start", async (ctx) => { // –±–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
  info.id = Number(ctx.msg.from?.id);
  if (await getProfile()) {
    await ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${info.name}!`, { reply_markup: menuKeyboard });
  } else {
    await users.insert({
      tg_id: info.id,
      state: "setName",
    });
    await ctx.reply(
      "–ô–æ—É, —á—ë –∫–∞–∫?! \n–¢—ã —Ç—É—Ç –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑. –¢–æ–≥–¥–∞ –ø–æ—è—Å–Ω—é. \n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –∑–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞, –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è, –ø–æ–æ–±—â–∞—Ç—Å—è. –¢—ã –Ω–µ –ø—Ä–æ—Ç–∏–≤? \n–¢–æ–≥–¥–∞ –Ω–∞—á–Ω—ë–º",
    );
    await ctx.reply(
      "–ó–≤–∞—Ç—å —Ç–æ —Ç–µ–±—è –∫–∞–∫? –ê –ø—Ä–æ–∑–≤–∏—â–µ —Ç–æ –µ—Å—Ç—å?",
      //{ parse_mode: "HTML" }, // –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–≥–∏ –∏–∑ html // –∞ —è –Ω–µ –ø–æ–Ω—è–ª
    );
    setState("setName"); // —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –±–æ—Ç—É –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–¥—Ç–∏ –∏–º—è
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /like
bot.command("like", async (ctx) => {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    // –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –µ—â–µ –Ω–µ –æ—Ü–µ–Ω–∏–≤–∞–ª–∏ —Ç–æ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
    if (!ratings[userId]) {
        ratings[userId] = { likes: 0, dislikes: 0 };
    }

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ "–Ω—Ä–∞–≤–∏—Ç—Å—è"
    ratings[userId].likes += 1;

    await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. üëç");
});

// –ö–æ–º–∞–Ω–¥–∞ /dislike
bot.command("dislike", async (ctx) => {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    // –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –µ—â–µ –Ω–µ –æ—Ü–µ–Ω–∏–≤–∞–ª–∏ —Ç–æ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
    if (!ratings[userId]) {
        ratings[userId] = { likes: 0, dislikes: 0 };
    }

   // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ "–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è"
    ratings[userId].dislikes += 1;

    await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–±–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. üëé");
});

// –ö–æ–º–∞–Ω–¥–∞ /stats –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ü–µ–Ω–æ–∫
bot.command("stats", async (ctx) => {
    const userId = ctx.from?.id.toString();
    const userRatings = ratings[userId] || { likes: 0, dislikes: 0 };
    const response = `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ù—Ä–∞–≤–∏—Ç—Å—è: ${userRatings.likes}, –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è: ${userRatings.dislikes}`;
    await ctx.reply(response);
});

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
bot.callbackQuery("interestsDone", async (ctx) => {
  await ctx.deleteMessage();
  await ctx.reply("–û—Ç–ª–∏—á–Ω–æ!");
  await reviewProfile(ctx);
});
bot.callbackQuery("interestsNotDone", async (ctx) => {
  await ctx.deleteMessage();
  info.interests = "";
  await ctx.reply("–ù–∞–ø–∏—à–∏ —É–≤–ª–µ—á–µ–Ω–∏—è –∑–∞–Ω–æ–≤–∞!");
  setState("setInterests");
});
bot.callbackQuery("1", async (ctx) => {
  await ctx.deleteMessage();
  await ctx.reply("–í–ê–£ –≠–¢–û –ª—é–±–∏–º–∞—è –∫–æ—Ñ–µ–π–Ω—è –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è! \n –°–∫—É—Ä–∞—Ç–æ–≤. 70 –ª–µ—Ç –û–∫—Ç—è–±—Ä—è, 7");
  info.coffee = "–°–∫—É—Ä–∞—Ç–æ–≤. 70 –ª–µ—Ç –û–∫—Ç—è–±—Ä—è, 7"
  await ctx.reply(
    "–•–æ—Ä–æ—à–æ! –∞ —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏ –º–Ω–µ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ",//"–•–æ—Ä–æ—à–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! –ñ–¥–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ–π–∫—É!",
  );
  await ctx.reply(
    "PS: –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∞—Å –≤ 24-—á–∞—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ",
  );
  setState("setTime");
});
bot.callbackQuery("2", async (ctx) => {
  await ctx.deleteMessage();
  await ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –°–∫—É—Ä–∞—Ç–æ–≤. –ú–∏—Ä–∞, 7–ê");
  info.coffee = "–°–∫—É—Ä–∞—Ç–æ–≤. –ú–∏—Ä–∞, 7–ê"
  await ctx.reply(
    "–•–æ—Ä–æ—à–æ! –∞ —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏ –º–Ω–µ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ",//"–•–æ—Ä–æ—à–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! –ñ–¥–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ–π–∫—É!",
  );
  await ctx.reply(
    "PS: –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∞—Å –≤ 24-—á–∞—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ",
  );
  setState("setTime");
});
bot.callbackQuery("3", async (ctx) => {
  await ctx.deleteMessage();
  await ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –°–∫—É—Ä–∞—Ç–æ–≤. –ö—Ä–∞—Å–Ω—ã–π –ü—É—Ç—å, 63");
  info.coffee = "–°–∫—É—Ä–∞—Ç–æ–≤. –ö—Ä–∞—Å–Ω—ã–π –ü—É—Ç—å, 63"
  await ctx.reply(
    "–•–æ—Ä–æ—à–æ! –∞ —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏ –º–Ω–µ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ",//"–•–æ—Ä–æ—à–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! –ñ–¥–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ–π–∫—É!",
  );
  await ctx.reply(
    "PS: –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∞—Å –≤ 24-—á–∞—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ",
  );
  setState("setTime");
});
bot.callbackQuery("4", async (ctx) => {
  await ctx.deleteMessage();
  await ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –°–∫—É—Ä–∞—Ç–æ–≤. –ò—Ä—Ç—ã—à—Å–∫–∞—è –ù–∞–±–µ—Ä–µ–∂–Ω–∞—è, 30");
  info.coffee = "–°–∫—É—Ä–∞—Ç–æ–≤. –ò—Ä—Ç—ã—à—Å–∫–∞—è –ù–∞–±–µ—Ä–µ–∂–Ω–∞—è, 30"
  await ctx.reply(
    "–•–æ—Ä–æ—à–æ! –∞ —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏ –º–Ω–µ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ",//"–•–æ—Ä–æ—à–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! –ñ–¥–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ–π–∫—É!",
  );
  await ctx.reply(
    "PS: –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∞—Å –≤ 24-—á–∞—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ",
  );
  setState("setTime");
});
bot.callbackQuery("5", async (ctx) => {
  await ctx.deleteMessage();
  await ctx.reply("–•–û–†–û–®–û! –≠–Ω–∏—Ç–∞–π–º. –õ–æ–±–∫–æ–≤–∞, 6/1");
  info.coffee = "–≠–Ω–∏—Ç–∞–π–º. –õ–æ–±–∫–æ–≤–∞, 6/1"
  await ctx.reply(
    "–•–æ—Ä–æ—à–æ! –∞ —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏ –º–Ω–µ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ",//"–•–æ—Ä–æ—à–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! –ñ–¥–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ–π–∫—É!",
  );
  await ctx.reply(
    "PS: –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∞—Å –≤ 24-—á–∞—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ",
  );
  setState("setTime");
});
bot.hears(
  ["–ø—Ä–æ—Ñ–∏–ª—å", "–ü—Ä–æ—Ñ–∏–ª—å", "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§"],
  async (ctx) => {
    setState("setTime");
  },
);

bot.on("message", async (ctx) => {
  if (info.state) { // –ø—Ä–∏ –Ω–µ–ø—É—Å—Ç–æ–º info.state
    switch (info.state) {
      case "setName":
        if (
          typeof ctx.msg.text !== "string" ||
          /[0-9_.*^%$#@!]/.test(ctx.msg.text) // —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–æ–≤
        ) {
          await ctx.reply(
            "–ö–æ—Å—è–∫! –ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á–∏—Å–ª–∞ –∏ —Å–∏–º–≤–æ–ª—ã",
          );
          return;
        } else {
          info.name = ctx.msg.text || ""; //—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
          await ctx.reply("–ù—É, –ø—Ä–æ—Ö–æ–¥–∏ —Ç–æ–≥–¥–∞,  " + info.name + "!");
          await ctx.reply("–°–∫–æ–ª—å–∫–æ –ª–µ—Ç —Ç–æ —Ç–µ–±–µ?");
          setState("setAge");
        }
        break;

      case "setAge":
        if (isNaN(Number(ctx.msg.text))) {
          await ctx.reply("–ù–∞–ø–∏—à–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ–µ—Ä–∫–∞–º–∏)))");
          return;
        }
        info.age = Number(ctx.msg.text);
          await ctx.reply("–í—ã–±–µ—Ä–∏ –∫–æ—Ñ–µ–π–Ω—é –ø–æ –¥—É—à–µ!", { reply_markup: interesKeyboard })//"–ö—Ä—É—Ç–æ! –Ω–∞–ø–∏—à–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –ß–ï–†–ï–ó –∑–∞–ø—è—Ç—É—é",
        //setState("setCoffee");
        break;
        
        case "setCoffee":
        /*if(isNaN(Number(ctx.msg.text)) || Number(ctx.msg.text) > 5){
          await ctx.reply("–ß—ë—Ç —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª|-1-|");
          return;
        }
        info.coffee = Number(ctx.msg.text);*/
        await ctx.reply(
          "–•–æ—Ä–æ—à–æ! –∞ —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏ –º–Ω–µ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ",//"–•–æ—Ä–æ—à–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! –ñ–¥–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ–π–∫—É!",
        );
        await ctx.reply(
          "PS: –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∞—Å –≤ 24-—á–∞—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ",
        );
        setState("setTime");
        break;

        case "setTime":
        if(isNaN(Number(ctx.msg.text)) || Number(ctx.msg.text) > 24){
          await ctx.reply("–ß—ë—Ç —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª|-1-|");
          return;
        }
        await ctx.reply("–ü—Ä–∏–Ω—è–ª. –¢–æ–ª—å–∫–æ —Ç—ã –Ω–µ –æ–ø–∞–∑–¥—ã–≤–∞–π) \n —Ç–µ–ø–µ—å –ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –ß–ï–†–ï–ó –ó–ê–ü–Ø–¢–£–Æ");
        setState("setInterests")
        break;


        
        case "setInterests":
        info.interests = ctx.msg.text || "";
        await ctx.reply(
          "–í–æ—Ç —ç—Ç–æ —Ç–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã:",
        );
        await ctx.reply(
          info.interests,
        );
        await ctx.reply("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∫–æ–Ω–µ—á–Ω–æ. –≠—Ç–æ –≤—Å—ë??", { reply_markup: yesOrNo }); // —Å–º–æ—Ç—Ä–∏ bot.callbackQuery
        break;

      case "review":
        switch (ctx.msg.text) {
          case "–î–∞!":
            info.done = true;
            await ctx.reply("–û—Ç–ª–∏—á–Ω–æ!");
            const {data, error} = await users.update({
              name: info.name,
              age: info.age,
              time: info.time,
              coffee: info.coffee,
              interests: info.interests,
              done: info.done,
            }).eq("tg_id", info.id).single();
            console.log(data, error)
            await ctx.reply("–ñ–¥–∏ –ø–æ–∫–∞ –Ø –Ω–∞–π–¥—É –¢–µ–±–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∏)");
            //setState("searching")
            break;

          case "–ù–µ—Ç, —Ö–æ—á—É –∏–∑–º–µ–Ω–∏—Ç—å":
            setState("setName");
            await ctx.reply("–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å–Ω–∞—á–∞–ª–∞! –ö–∞–∫ —Ç–µ–±—è –∑–≤–∞—Ç—å?");
            info.interests = [];
            break;

          default:
            await ctx.reply("—á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!"); // —è –Ω–µ –ø–æ–Ω—è–ª
            break;
        }
        break;
        
      default:
        break;
    }
  }
});
// –ø—É –ø—É –ø—É
//—Å–∫–∞–∂–µ–º —á—Ç–æ —Ö—É–π–Ω—è
/*while (info.state == "searching") {
  setInterval(async ()=>{
    const users = await getSimularUsers()
    if (users.length>0) {
      console.log("–æ–≥–æ")
    }
  }, 10000)
}*/
